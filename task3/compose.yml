version: '3.8'

volumes:
  data:
  prometheus-data:
  grafana_data:

services:
  storage:
    image: minio/minio:RELEASE.2024-12-18T13-15-44Z.fips
    container_name: storage
    command: server /data
    restart: always
    expose: 
      - 9000
    environment:
      MINIO_ROOT_USER: ${Storage_AccessKey:-STORAGE_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${Storage_Secret:-STORAGE_SECRET_KEY}
      MINIO_PROMETHEUS_AUTH_TYPE: public
    ports:
      - "9000:9000"
    volumes:
      - data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  createbuckets:
    image: minio/mc:RELEASE.2024-11-21T17-21-54Z
    depends_on:
      - storage
    restart: on-failure
    environment:
      STORAGE_ACCESS_KEY: ${Storage_AccessKey}
      STORAGE_SECRET_KEY: ${Storage_Secret}
      STORAGE_BUCKET: ${Storage_Bucket}
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set storage http://storage:9000 ${Storage_AccessKey} ${Storage_Secret} &&
      /usr/bin/mc mb --ignore-existing storage/${Storage_Bucket} &&
      /usr/bin/mc anonymous set public storage/${Storage_Bucket} &&
      echo 'Бакет и политика доступа успешно настроены.' &&
      exit 0
      "

  uploader:
    build: ./uploader
    depends_on:
      - storage
      - createbuckets
    expose: 
      - 3000
    environment:
      PORT: 3000
      S3_HOST: storage
      S3_PORT: 9000
      S3_ACCESS_KEY: ${Storage_AccessKey:-STORAGE_ACCESS_KEY}
      S3_ACCESS_SECRET: ${Storage_Secret:-STORAGE_SECRET_KEY}
      S3_BUCKET: ${Storage_Bucket:-data}
  
  security:
    build: ./security
    expose: 
      - 3000
    environment:
      PORT: 3000

  gateway:
    image: nginx:1.27.3-alpine-slim
    volumes:
      - ./gateway/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:8080"      
    depends_on:
      - storage
      - uploader
      - security
